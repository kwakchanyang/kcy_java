package study0224;

// 2. 명시적 초기화
public class Member {
	
//	int count; 는 인스턴스 변수고
	static int count; // 클래스 변수
	
	String name="박문수"; // 이름  ┐
	int age=10; // 나이		    │ > 인스턴스 변수
	String addr; // 주소         ┘
	String dept;
	
	static{ // 클래스 초기화블럭 - 클래스 변수만 초기화가능
//		age=10; 인스턴스 변수 불가
		count=0;
		
	}
	
	
//	3. 초기화 블럭
	{ // 인스턴스 초기화블럭
		// 모든 생성자 메서드에 공통으로 들어가는 초기화 코드
		name="김유신";
		dept="컴퓨터공학과";
		count++;
	}
	
	// 1. 생성자메서드 이용해서 초기화
//	아무것도 입력이 되지 않았을때 이값으로 초기화된다
	Member(){
		name="아무개";
		age=10;
		addr="대전";
//		dept="컴퓨터공학과";
	}

//	내가 넣어준 값으로 초기화가 이루어지게 하려면
	Member(String name, int age, String addr){
		this.name=name; // 초기화블럭에는 이런코드 넣을수없음
		this.age=age;
		this.addr=addr;
//		dept="컴퓨터공학과";
	}

	// 인스턴스 메서드
	void setName(String name) {
		this.name=name;
		output(); // 클래스 메서드 호출 가능
	}
	// 클래스 메서드(앞에 static붙음)
	static void output() {
		/* 실행 > 클래스정의 > 메모리로드> 클래스 생성,변수,메서드 output > main() > 생성자 > name,age,setName
		setName이 생성되기도전에 output에서 사용하려해서 오류뜸
		int total=a+b+c;
		int a=10,b=20,c=30; > 이런 경우이다.
		*/
		setName("이순신");	//인스턴스 메서드 호출 불가
		System.out.println(name);
	}
}

/*     	
	클래스 멤버 변수 초기화 방법
	멤버 변수인 인스턴스변수의 초기화 방법
	1. 생성자메서드 이용해서 초기화
	2. 명시적 초기화
	3. 초기화블럭을 통해 초기화

	초기화 진행 순서
	명시적 초기화 > 초기화 블럭 > 생성자메서드(오버로딩가능)
	
	사용자입력값을 인스턴스변수에 넣어주는게 아니라 객체가 만들어질때마다 
	기본적으로 가져야할 초기값이 있다면 앞의 초기화블럭에 넣어주면
	여기에 한번만 넣어주면 모든 생성자 메서드에 공통으로 초기값이 들어간다.
	
	클래스 내부에 선언되는 변수의 종류
	1. 인스턴스 변수 - 타입 변수명;
		인스턴스 변수는 객체 생성해야 만들어지는 변수
		
	2. 메서드 내부에 선언되는 변수 - 지역변수
	 	지연변수는 자신이 선언된 위치에서만 사용가능
	 	메서드가 호출되어야 공간이 존재하고 메서드 종료시 해제
	 	
	3. 클래스 변수 - static 타입 변수명;
		클래스 변수는 객체 생성시 만들어지는 변수가 아니다.
		자바프로그램 실행 할때 생성되는 변수
		공용 변수(공유 자원) > 모든객체들이 다 사용할 수 있는 변수
		
	메서드의 종류
		- 인스턴스 메서드
		  인스턴스 메서드는 객체 생성해야 사용가능
		- 클래스 메서드
			static void output(){}
			객체없이 사용가능
			클래스이름.메서드이름();
			
	!!!주의!!!
	
	클래스메서드에서는 오직 클래스 변수 또는 클래스 메서드만 사용가능
	인스턴스 메서드에서 클래스 메서드 사용불가
	
	그래서 정리!!
	
	클래스변수(static) 또는 클래스메서드(static)은 프로그램 실행시 생성
	
	인스턴스변수 또는 인스턴스메서드는 객체 생성시 생성
	
	프로그램실행 -> 클래스정의부 메모리 로드-> 클래스변수또는 클래스메서드생성->main 메서드 실행->
	new Member() 생성자메서드 호출 -> 객체 생성 -> 인스턴스변수 또는 인스턴스 메서드 생성
	
	그래서 초기화 순서는!!
	클래스변수 명시적초기화 -> 클래스초기화블럭 -> 인스턴스변수 명시적 초기화 ->
	인스턴스 초기화 블럭 ->생성자 메서드
	
	
	

*/